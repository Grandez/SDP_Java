
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Wed Feb 14 10:38:42 CET 2018
//----------------------------------------------------

package com.jgg.sdp.parser.lang;

import java_cup.runtime.*;
import com.jgg.sdp.common.ctes.*;
import com.jgg.sdp.common.config.*;
import com.jgg.sdp.parser.base.*;
import com.jgg.sdp.blocks.stmt.*;
import com.jgg.sdp.parser.stmt.StmtCICS;
import com.jgg.sdp.parser.symbols.*;
import com.jgg.sdp.parser.code.CICSCode;

/** CUP v0.11a beta 20060608 generated parser.
  * @version Wed Feb 14 10:38:42 CET 2018
  */
public class CICSParser extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public CICSParser() {super();}

  /** Constructor which sets the default scanner. */
  public CICSParser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public CICSParser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\u023c\000\002\002\003\000\002\002\004\000\002\002" +
    "\002\000\002\025\004\000\002\026\003\000\002\026\003" +
    "\000\002\026\003\000\002\026\003\000\002\026\003\000" +
    "\002\021\003\000\002\021\003\000\002\021\003\000\002" +
    "\021\003\000\002\021\003\000\002\021\003\000\002\021" +
    "\003\000\002\021\003\000\002\021\003\000\002\021\003" +
    "\000\002\021\003\000\002\021\003\000\002\021\003\000" +
    "\002\021\003\000\002\021\003\000\002\022\003\000\002" +
    "\022\003\000\002\022\003\000\002\022\003\000\002\022" +
    "\003\000\002\023\003\000\002\023\004\000\002\023\004" +
    "\000\002\023\004\000\002\023\004\000\002\023\004\000" +
    "\002\023\004\000\002\024\003\000\002\024\003\000\002" +
    "\024\003\000\002\024\003\000\002\024\003\000\002\024" +
    "\003\000\002\024\003\000\002\024\003\000\002\024\003" +
    "\000\002\024\003\000\002\024\003\000\002\027\003\000" +
    "\002\027\003\000\002\027\003\000\002\027\003\000\002" +
    "\027\003\000\002\027\003\000\002\027\003\000\002\027" +
    "\003\000\002\027\003\000\002\027\003\000\002\027\003" +
    "\000\002\027\003\000\002\027\003\000\002\027\003\000" +
    "\002\027\003\000\002\027\003\000\002\027\003\000\002" +
    "\027\003\000\002\027\003\000\002\027\003\000\002\032" +
    "\003\000\002\032\004\000\002\035\004\000\002\035\003" +
    "\000\002\035\003\000\002\035\004\000\002\036\004\000" +
    "\002\036\003\000\002\040\003\000\002\040\004\000\002" +
    "\040\004\000\002\040\004\000\002\040\004\000\002\040" +
    "\004\000\002\040\004\000\002\040\004\000\002\040\004" +
    "\000\002\040\004\000\002\040\003\000\002\040\004\000" +
    "\002\040\003\000\002\040\004\000\002\040\004\000\002" +
    "\042\004\000\002\042\004\000\002\045\004\000\002\045" +
    "\004\000\002\045\004\000\002\045\004\000\002\046\003" +
    "\000\002\046\003\000\002\046\003\000\002\046\003\000" +
    "\002\046\003\000\002\046\003\000\002\046\003\000\002" +
    "\046\003\000\002\046\003\000\002\047\003\000\002\047" +
    "\003\000\002\047\003\000\002\047\003\000\002\047\003" +
    "\000\002\047\003\000\002\047\004\000\002\050\004\000" +
    "\002\050\004\000\002\052\004\000\002\052\004\000\002" +
    "\053\003\000\002\053\004\000\002\053\003\000\002\053" +
    "\003\000\002\054\003\000\002\054\003\000\002\055\004" +
    "\000\002\055\003\000\002\055\003\000\002\055\004\000" +
    "\002\055\003\000\002\056\004\000\002\056\004\000\002" +
    "\056\004\000\002\057\004\000\002\057\004\000\002\057" +
    "\004\000\002\057\003\000\002\057\004\000\002\030\003" +
    "\000\002\031\003\000\002\074\003\000\002\074\003\000" +
    "\002\074\003\000\002\074\003\000\002\074\003\000\002" +
    "\074\003\000\002\074\003\000\002\075\004\000\002\075" +
    "\004\000\002\075\004\000\002\075\004\000\002\075\004" +
    "\000\002\075\004\000\002\075\004\000\002\044\004\000" +
    "\002\037\004\000\002\072\004\000\002\007\004\000\002" +
    "\043\004\000\002\061\004\000\002\033\004\000\002\071" +
    "\004\000\002\062\004\000\002\070\004\000\002\063\004" +
    "\000\002\041\004\000\002\065\004\000\002\051\004\000" +
    "\002\013\004\000\002\014\004\000\002\012\004\000\002" +
    "\003\004\000\002\004\004\000\002\005\004\000\002\010" +
    "\004\000\002\011\004\000\002\006\004\000\002\126\003" +
    "\000\002\126\002\000\002\110\003\000\002\110\003\000" +
    "\002\111\003\000\002\111\003\000\002\111\003\000\002" +
    "\130\003\000\002\130\003\000\002\130\003\000\002\130" +
    "\003\000\002\117\003\000\002\117\003\000\002\112\003" +
    "\000\002\112\004\000\002\112\004\000\002\112\003\000" +
    "\002\112\003\000\002\113\003\000\002\113\003\000\002" +
    "\113\003\000\002\113\003\000\002\113\003\000\002\113" +
    "\002\000\002\076\003\000\002\076\003\000\002\076\003" +
    "\000\002\076\003\000\002\076\003\000\002\076\003\000" +
    "\002\076\003\000\002\076\003\000\002\076\003\000\002" +
    "\076\003\000\002\076\003\000\002\076\003\000\002\076" +
    "\003\000\002\076\003\000\002\076\003\000\002\076\003" +
    "\000\002\076\003\000\002\076\003\000\002\076\003\000" +
    "\002\076\003\000\002\076\003\000\002\076\003\000\002" +
    "\076\003\000\002\076\003\000\002\076\003\000\002\076" +
    "\003\000\002\125\003\000\002\125\003\000\002\125\003" +
    "\000\002\125\003\000\002\125\003\000\002\114\003\000" +
    "\002\114\003\000\002\114\003\000\002\114\003\000\002" +
    "\100\003\000\002\100\003\000\002\100\003\000\002\100" +
    "\003\000\002\100\003\000\002\100\003\000\002\077\003" +
    "\000\002\077\003\000\002\077\003\000\002\077\003\000" +
    "\002\101\003\000\002\101\003\000\002\101\003\000\002" +
    "\101\003\000\002\101\003\000\002\101\003\000\002\101" +
    "\003\000\002\101\003\000\002\101\003\000\002\115\003" +
    "\000\002\115\003\000\002\115\003\000\002\115\003\000" +
    "\002\116\003\000\002\116\003\000\002\140\003\000\002" +
    "\140\003\000\002\103\003\000\002\103\003\000\002\103" +
    "\003\000\002\103\003\000\002\103\003\000\002\103\003" +
    "\000\002\103\003\000\002\103\003\000\002\103\003\000" +
    "\002\103\003\000\002\103\003\000\002\103\003\000\002" +
    "\103\003\000\002\103\003\000\002\135\003\000\002\135" +
    "\003\000\002\135\003\000\002\135\003\000\002\135\003" +
    "\000\002\135\003\000\002\135\003\000\002\135\003\000" +
    "\002\135\003\000\002\135\003\000\002\127\003\000\002" +
    "\127\003\000\002\120\003\000\002\120\004\000\002\104" +
    "\004\000\002\104\003\000\002\104\002\000\002\105\003" +
    "\000\002\105\002\000\002\121\003\000\002\121\003\000" +
    "\002\122\004\000\002\122\003\000\002\144\003\000\002" +
    "\144\004\000\002\144\003\000\002\144\003\000\002\144" +
    "\004\000\002\144\002\000\002\106\003\000\002\106\002" +
    "\000\002\141\003\000\002\141\003\000\002\141\003\000" +
    "\002\131\003\000\002\131\003\000\002\124\003\000\002" +
    "\124\003\000\002\123\003\000\002\123\003\000\002\123" +
    "\003\000\002\123\003\000\002\133\003\000\002\133\003" +
    "\000\002\136\003\000\002\136\003\000\002\107\003\000" +
    "\002\107\003\000\002\107\002\000\002\142\003\000\002" +
    "\142\003\000\002\134\003\000\002\134\003\000\002\132" +
    "\003\000\002\132\002\000\002\143\003\000\002\143\003" +
    "\000\002\143\003\000\002\137\003\000\002\137\003\000" +
    "\002\137\004\000\002\137\004\000\002\137\003\000\002" +
    "\137\004\000\002\137\004\000\002\137\004\000\002\137" +
    "\004\000\002\137\004\000\002\137\003\000\002\137\003" +
    "\000\002\137\003\000\002\137\004\000\002\137\004\000" +
    "\002\137\004\000\002\015\003\000\002\015\003\000\002" +
    "\015\003\000\002\015\003\000\002\015\003\000\002\015" +
    "\003\000\002\015\003\000\002\015\003\000\002\015\003" +
    "\000\002\015\003\000\002\015\003\000\002\015\003\000" +
    "\002\015\003\000\002\015\003\000\002\015\003\000\002" +
    "\015\003\000\002\015\003\000\002\015\003\000\002\015" +
    "\003\000\002\015\003\000\002\015\003\000\002\015\003" +
    "\000\002\015\003\000\002\015\003\000\002\015\003\000" +
    "\002\015\003\000\002\015\003\000\002\015\003\000\002" +
    "\015\003\000\002\016\003\000\002\016\003\000\002\016" +
    "\003\000\002\016\003\000\002\016\003\000\002\016\003" +
    "\000\002\016\003\000\002\016\003\000\002\016\003\000" +
    "\002\016\003\000\002\016\003\000\002\016\003\000\002" +
    "\016\003\000\002\016\003\000\002\016\003\000\002\016" +
    "\003\000\002\016\003\000\002\016\003\000\002\016\003" +
    "\000\002\016\003\000\002\016\003\000\002\016\003\000" +
    "\002\016\003\000\002\016\003\000\002\016\003\000\002" +
    "\016\003\000\002\102\003\000\002\102\003\000\002\102" +
    "\003\000\002\102\003\000\002\102\003\000\002\102\003" +
    "\000\002\102\003\000\002\102\003\000\002\102\003\000" +
    "\002\102\003\000\002\102\003\000\002\102\003\000\002" +
    "\102\003\000\002\102\003\000\002\102\003\000\002\102" +
    "\003\000\002\102\003\000\002\102\003\000\002\102\003" +
    "\000\002\102\003\000\002\102\003\000\002\102\003\000" +
    "\002\102\003\000\002\102\003\000\002\102\003\000\002" +
    "\102\003\000\002\102\003\000\002\102\003\000\002\102" +
    "\003\000\002\102\003\000\002\102\003\000\002\102\003" +
    "\000\002\102\003\000\002\102\003\000\002\102\003\000" +
    "\002\102\003\000\002\102\003\000\002\102\003\000\002" +
    "\102\003\000\002\102\003\000\002\102\003\000\002\102" +
    "\003\000\002\102\003\000\002\102\003\000\002\102\003" +
    "\000\002\102\003\000\002\102\003\000\002\102\003\000" +
    "\002\102\003\000\002\102\003\000\002\102\003\000\002" +
    "\102\003\000\002\102\003\000\002\102\003\000\002\102" +
    "\004\000\002\102\003\000\002\102\003\000\002\102\003" +
    "\000\002\102\003\000\002\102\003\000\002\102\003\000" +
    "\002\102\003\000\002\102\003\000\002\102\003\000\002" +
    "\102\003\000\002\102\003\000\002\102\003\000\002\102" +
    "\003\000\002\102\003\000\002\102\003\000\002\102\003" +
    "\000\002\102\003\000\002\102\003\000\002\102\003\000" +
    "\002\102\003\000\002\102\003\000\002\102\003\000\002" +
    "\102\003\000\002\102\003\000\002\102\003\000\002\017" +
    "\003\000\002\017\003\000\002\017\003\000\002\017\003" +
    "\000\002\017\003\000\002\017\003\000\002\017\003\000" +
    "\002\017\003\000\002\017\004\000\002\017\003\000\002" +
    "\017\004\000\002\020\003\000\002\020\003\000\002\020" +
    "\003\000\002\020\003\000\002\020\003\000\002\020\003" +
    "\000\002\020\003\000\002\020\003\000\002\020\003\000" +
    "\002\020\003\000\002\020\003\000\002\020\003\000\002" +
    "\020\003\000\002\020\003\000\002\020\003\000\002\020" +
    "\003\000\002\020\003\000\002\020\003\000\002\020\003" +
    "\000\002\020\003\000\002\020\003\000\002\020\003\000" +
    "\002\020\003\000\002\020\003\000\002\020\003\000\002" +
    "\020\003\000\002\020\003\000\002\020\003\000\002\020" +
    "\003\000\002\020\003\000\002\020\003\000\002\020\003" +
    "\000\002\020\003\000\002\020\003\000\002\020\003\000" +
    "\002\020\003\000\002\020\003\000\002\020\003\000\002" +
    "\020\003\000\002\020\003\000\002\020\003\000\002\020" +
    "\003\000\002\020\003\000\002\020\003\000\002\020\003" +
    "\000\002\020\003\000\002\020\003\000\002\020\003\000" +
    "\002\020\003\000\002\020\003\000\002\152\003\000\002" +
    "\152\002\000\002\153\003\000\002\153\004\000\002\154" +
    "\004\000\002\145\003\000\002\145\003\000\002\146\003" +
    "\000\002\146\003\000\002\147\005\000\002\147\002\000" +
    "\002\150\003\000\002\150\004\000\002\151\003\000\002" +
    "\151\003\000\002\151\003\000\002\151\005\000\002\151" +
    "\005\000\002\156\004\000\002\155\003\000\002\155\003" +
    "\000\002\157\003\000\002\157\002\000\002\160\003\000" +
    "\002\160\004\000\002\161\004\000\002\162\003\000\002" +
    "\162\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u0283\000\316\015\075\020\105\023\060\024\137\026" +
    "\131\027\077\030\064\036\067\041\071\042\242\045\107" +
    "\047\231\052\036\056\007\062\120\063\175\070\025\077" +
    "\140\100\133\101\113\102\047\104\132\106\004\107\110" +
    "\114\013\116\010\120\237\123\065\124\056\127\073\131" +
    "\212\144\116\146\012\147\070\151\146\152\015\153\034" +
    "\154\016\155\233\156\222\157\061\162\136\164\014\166" +
    "\230\170\027\177\170\201\173\212\033\213\072\233\225" +
    "\235\211\236\147\237\045\246\050\247\037\250\041\251" +
    "\130\252\054\253\043\254\123\255\011\260\156\262\117" +
    "\263\234\267\165\270\053\272\227\273\200\274\042\275" +
    "\157\276\206\277\022\301\160\303\040\305\076\310\224" +
    "\312\241\313\162\314\207\315\142\316\101\317\214\320" +
    "\115\321\005\322\205\323\216\324\122\332\074\333\052" +
    "\346\035\360\104\370\121\375\235\u0100\103\u0103\141\u0104" +
    "\126\u0105\226\u0108\030\u0109\124\u010a\203\u010b\063\u010c\232" +
    "\001\uffff\000\066\033\u0283\057\u0278\066\u0272\072\u0284\073" +
    "\u026f\074\u027c\112\u0273\113\u026b\130\u0274\145\u026e\171\u027e" +
    "\172\u027b\227\u027a\234\u027f\243\u0285\244\u026d\245\u0270\266" +
    "\u0282\341\u0279\344\u026c\345\u0275\355\u027d\357\u0276\363\u0271" +
    "\376\u0280\u0106\u0281\001\002\000\002\001\uff8a\000\002\001" +
    "\uffef\000\004\242\u026a\001\002\000\004\357\u0269\001\002" +
    "\000\006\343\u013f\362\u0141\001\002\000\004\350\u0267\001" +
    "\002\000\014\070\u0261\101\u0265\165\u0264\274\u0263\310\u0266" +
    "\001\002\000\240\022\u024a\033\u0220\034\u024d\035\u023a\040" +
    "\u0245\044\u025b\050\u022d\057\u024f\060\u0210\066\u023c\072\u0258" +
    "\073\u022a\074\u0228\103\u025e\111\u0253\112\u0231\113\u024c\115" +
    "\u021c\117\u0243\127\u0248\130\u0247\137\u025f\140\u024b\142\u0218" +
    "\145\u0252\160\u0234\167\u0213\171\u024e\172\u021e\173\u0232\174" +
    "\u0227\175\u0219\176\u0255\211\u0236\212\u025d\214\u0217\215\u021a" +
    "\227\u0238\234\u022f\242\u0223\243\u0221\244\u0230\245\u025a\265" +
    "\u0239\266\u0256\302\u023f\325\u0259\326\u023e\327\u0211\331\u022c" +
    "\334\u021d\335\u0216\336\u0225\337\u0233\340\u021b\341\u023d\344" +
    "\u0224\345\u0246\350\u0212\351\u021f\352\u0214\354\u0237\355\u0242" +
    "\356\u0249\357\u0254\363\u0251\364\u0250\365\u0257\366\u0240\371" +
    "\u0215\372\u0222\373\u0229\374\u022b\376\u0226\u0101\u025c\u0102\u0241" +
    "\u0105\u0244\u0106\u022e\u0107\u023b\001\002\000\002\001\uff89\000" +
    "\010\060\u020f\067\u0158\075\u0154\001\002\000\002\001\uffd2" +
    "\000\002\001\ufffa\000\002\001\ufffd\000\002\001\uff9c\000" +
    "\002\001\uffeb\000\002\001\uffcf\000\074\057\u01fe\066\u01f9" +
    "\072\u020a\073\u01f5\074\u0201\112\u01fa\113\u01ef\130\u01fb\145" +
    "\u01f3\171\u0203\203\u01f2\207\u0209\225\u020c\227\u0200\234\u0204" +
    "\243\u020b\244\u01f4\245\u01f8\266\u0207\307\u01f1\341\u01ff\344" +
    "\u01f0\345\u01fc\355\u0202\357\u01fd\363\u01f6\367\u0208\376\u0205" +
    "\u0106\u0206\001\002\000\002\001\ufff5\000\062\015\u01d2\016" +
    "\u01d3\023\u01d9\055\u01d8\065\u01e4\110\u01e5\121\u01e0\125\u01e6" +
    "\126\u01eb\133\u01e7\134\u01df\135\u01ea\136\u01d6\201\u01ec\217" +
    "\u01dc\231\u01e8\240\u01d4\241\u01ed\251\u01d5\260\u01dd\264\u01da" +
    "\267\u01e9\312\u01de\u0103\u01d7\001\002\000\010\172\u012e\173" +
    "\u012a\221\u01e2\001\uff99\000\002\001\uffbf\000\006\067\u0158" +
    "\075\u0154\001\002\000\002\001\uff73\000\022\026\u01cb\030" +
    "\u01d0\144\116\151\u01cd\170\u01cc\260\u01cf\305\u01c8\u0103\u01c9" +
    "\001\002\000\004\137\u01c6\001\002\000\004\325\u01c5\001" +
    "\002\000\004\157\u01c4\001\002\000\002\001\uffaa\000\004" +
    "\060\u01c3\001\002\000\006\256\u01c1\330\u01c0\001\uff94\000" +
    "\002\001\uff9f\000\010\006\u019d\010\u019f\245\u01a2\001\ufde0" +
    "\000\002\001\uff95\000\002\001\uffdd\000\006\343\u013f\362" +
    "\u0141\001\002\000\004\210\u019a\001\002\000\002\001\ufff3" +
    "\000\004\300\u0199\001\ufeb9\000\002\001\uff9d\000\002\001" +
    "\uffa0\000\002\001\uffc1\000\012\021\u0194\060\u0197\137\u0196" +
    "\242\u0195\001\002\000\002\001\uffcc\000\004\330\u0192\001" +
    "\002\000\010\015\u018f\025\u0190\054\u0191\001\002\000\002" +
    "\001\uffd7\000\004\070\u018e\001\002\000\002\001\uff77\000" +
    "\002\001\uffa1\000\002\001\uffd9\000\006\076\u018b\105\u018c" +
    "\001\002\000\002\001\uff96\000\004\031\u018a\001\002\000" +
    "\004\060\u0189\001\002\000\002\001\uff85\000\002\001\uff72" +
    "\000\002\001\uffbe\000\014\061\u017f\204\u0181\223\u017e\230" +
    "\u0183\347\u0180\001\ufed3\000\002\001\uff98\000\002\001\uffca" +
    "\000\002\001\uff8d\000\002\001\ufff2\000\004\232\u017d\001" +
    "\002\000\006\071\u017c\u010d\u017a\001\002\000\004\345\u0179" +
    "\001\uffb6\000\002\001\uffcd\000\006\232\u0178\336\u0177\001" +
    "\002\000\066\033\u0174\057\u0169\066\u0162\072\u0175\073\u0160" +
    "\074\u016d\112\u0165\113\u015c\130\u0166\145\u015e\171\u016f\172" +
    "\u016c\227\u016b\234\u0170\243\u0176\244\u015f\245\u0164\266\u0173" +
    "\341\u016a\344\u015d\345\u0167\355\u016e\357\u0168\363\u0163\376" +
    "\u0171\u0106\u0172\001\002\000\002\001\uffc0\000\002\001\uffc5" +
    "\000\016\021\u0155\060\u015b\067\u0158\075\u0154\137\u0156\350" +
    "\u015a\001\uff3c\000\002\001\uff79\000\002\001\uff8b\000\026" +
    "\031\u014a\032\u014d\043\u0149\141\u0148\202\u014e\242\u0151\325" +
    "\u014f\340\u0150\342\u014c\u0105\u0147\001\002\000\002\001\uffe7" +
    "\000\002\001\uff75\000\002\001\uff9a\000\012\021\u0142\060" +
    "\u0146\137\u0144\242\u0143\001\002\000\002\001\uff9e\000\006" +
    "\343\u013f\362\u0141\001\002\000\002\001\ufff7\000\002\001" +
    "\uff83\000\002\001\uffcb\000\004\304\u013e\001\uff4b\000\002" +
    "\001\uff78\000\002\001\uff86\000\002\001\uff97\000\002\001" +
    "\uffee\000\002\001\ufff0\000\004\054\u013d\001\002\000\004" +
    "\310\u013b\001\uff52\000\014\021\u0135\053\u0137\163\u0134\242" +
    "\u0136\350\u0138\001\uff4c\000\020\064\u012b\137\u0132\143\u0131" +
    "\172\u012e\173\u012a\312\u012f\345\u0130\001\002\000\010\023" +
    "\u0127\070\u0126\101\u0128\001\002\000\002\001\ufff6\000\002" +
    "\001\uffd4\000\002\001\ufff9\000\002\001\uff74\000\004\157" +
    "\u0125\001\002\000\004\002\u0124\001\002\000\002\001\ufffb" +
    "\000\002\001\ufffc\000\002\001\uffd3\000\002\001\001\000" +
    "\002\001\uffd8\000\006\204\u0121\226\u011f\001\ufedf\000\002" +
    "\001\uffe6\000\002\001\uffb7\000\002\001\uffce\000\002\001" +
    "\uffbb\000\002\001\uffd1\000\002\001\uffc4\000\006\017\u011d" +
    "\021\u011e\001\002\000\002\001\uffd5\000\002\001\uffd6\000" +
    "\006\017\u0119\177\u0118\001\uffe9\000\002\001\uffea\000\002" +
    "\001\uffdb\000\002\001\uffe8\000\002\001\uffc2\000\002\001" +
    "\uffe4\000\002\001\uffc3\000\002\001\uffda\000\004\132\u0117" +
    "\001\002\000\002\001\ufff8\000\002\001\ufff4\000\010\041" +
    "\u0116\101\u0115\154\u0113\001\002\000\002\001\uffed\000\012" +
    "\031\u0112\037\u0111\046\u010e\361\u010f\001\uff93\000\002\001" +
    "\uff4a\000\002\001\uffba\000\002\001\uffc8\000\002\001\uff7c" +
    "\000\004\353\u010d\001\002\000\002\001\uffc7\000\006\163" +
    "\u010b\222\u010a\001\002\000\002\001\uffdc\000\002\001\uff9b" +
    "\000\002\001\uffd0\000\002\001\uffec\000\002\001\ufff1\000" +
    "\012\021\u0106\060\u0109\137\u0108\242\u0107\001\002\000\002" +
    "\001\uff7a\000\146\034\326\040\341\050\376\057\360\066" +
    "\335\072\370\073\323\074\355\103\336\111\340\115\u0104" +
    "\117\331\130\362\145\374\160\350\167\325\172\u0101\173" +
    "\u0102\175\366\211\327\212\334\215\351\234\346\243\356" +
    "\245\357\325\364\334\377\335\354\336\330\337\373\340" +
    "\365\341\332\344\363\345\u0100\351\322\352\324\354\345" +
    "\355\u0103\356\367\357\344\365\353\366\343\371\352\374" +
    "\371\376\347\u0101\342\u0102\361\u0105\372\u0106\337\u0107\375" +
    "\001\002\000\030\050\304\066\305\103\311\112\306\116" +
    "\312\122\310\234\315\271\307\304\317\311\316\325\314" +
    "\001\002\000\032\051\266\062\262\124\261\220\264\224" +
    "\255\252\256\253\271\260\267\274\265\305\257\324\260" +
    "\u0108\270\001\002\000\002\001\uffac\000\006\306\254\u0106" +
    "\253\001\002\000\010\017\246\021\247\350\251\001\002" +
    "\000\002\001\uffe5\000\002\001\uff88\000\004\330\245\001" +
    "\002\000\002\001\uff49\000\002\001\uffc6\000\004\245\244" +
    "\001\002\000\002\001\uffc9\000\004\137\243\001\002\000" +
    "\002\001\uff76\000\002\001\uff6d\000\002\001\uff56\000\002" +
    "\001\uffae\000\002\001\uff4f\000\002\001\uff4e\000\002\001" +
    "\uffb4\000\002\001\uff4d\000\002\001\uffe2\000\002\001\ufefe" +
    "\000\002\001\ufeff\000\004\377\303\001\002\000\006\150" +
    "\302\161\301\001\002\000\002\001\ufea9\000\006\150\300" +
    "\161\277\001\002\000\006\150\276\161\275\001\002\000" +
    "\002\001\ufeb4\000\002\001\uffe3\000\002\001\ufeb1\000\002" +
    "\001\ufeaa\000\002\001\ufeb5\000\002\001\ufeab\000\004\161" +
    "\274\001\002\000\006\150\273\161\272\001\002\000\002" +
    "\001\ufeac\000\002\001\ufead\000\002\001\ufea6\000\002\001" +
    "\ufeb2\000\002\001\ufeb3\000\002\001\ufea7\000\002\001\ufea8" +
    "\000\002\001\ufeae\000\002\001\ufeaf\000\002\001\ufeb0\000" +
    "\002\001\ufe1e\000\002\001\ufe1d\000\002\001\ufe1b\000\002" +
    "\001\ufe17\000\002\001\ufe19\000\002\001\ufe1c\000\002\001" +
    "\ufe1a\000\002\001\uff5a\000\004\261\321\001\002\000\002" +
    "\001\ufe18\000\002\001\ufe15\000\004\257\320\001\002\000" +
    "\002\001\ufe16\000\002\001\ufe14\000\002\001\ufdf1\000\002" +
    "\001\ufe0d\000\002\001\ufdf0\000\002\001\ufe04\000\002\001" +
    "\ufe13\000\002\001\ufe00\000\002\001\ufdf7\000\002\001\ufe08" +
    "\000\002\001\ufdf4\000\002\001\uff5b\000\002\001\ufdff\000" +
    "\002\001\ufe0f\000\002\001\ufe0b\000\002\001\ufde3\000\002" +
    "\001\ufe0a\000\002\001\ufe12\000\002\001\ufde6\000\002\001" +
    "\ufdeb\000\002\001\ufdec\000\002\001\ufdef\000\002\001\ufdfd" +
    "\000\002\001\ufde7\000\002\001\ufe05\000\002\001\ufdfe\000" +
    "\002\001\ufde9\000\002\001\ufdea\000\002\001\ufdf8\000\002" +
    "\001\ufe0c\000\002\001\ufdfc\000\002\001\ufdfb\000\002\001" +
    "\ufe10\000\002\001\ufde5\000\002\001\ufe07\000\002\001\ufdf3" +
    "\000\002\001\ufdfa\000\002\001\ufdf5\000\002\001\ufe01\000" +
    "\002\001\ufded\000\002\001\ufe0e\000\002\001\ufde8\000\002" +
    "\001\ufde4\000\002\001\ufdf6\000\002\001\ufe06\000\002\001" +
    "\ufde2\000\002\001\ufe11\000\002\001\ufdf9\000\002\001\ufdf2" +
    "\000\002\001\ufe03\000\002\001\ufe02\000\002\001\ufdee\000" +
    "\002\001\ufe09\000\002\001\uffb0\000\002\001\uff05\000\002" +
    "\001\uff02\000\002\001\uff03\000\002\001\uff04\000\002\001" +
    "\ufecc\000\002\001\ufecd\000\002\001\uff8c\000\002\001\uffa6" +
    "\000\002\001\ufeca\000\002\001\ufecb\000\002\001\uff5f\000" +
    "\002\001\uff8e\000\002\001\uff8f\000\002\001\ufeb6\000\002" +
    "\001\uffdf\000\002\001\ufeb7\000\002\001\ufeb8\000\002\001" +
    "\uff5c\000\004\021\u011b\001\002\000\002\001\ufee3\000\002" +
    "\001\uffaf\000\002\001\ufee2\000\002\001\uffad\000\002\001" +
    "\ufedc\000\002\001\ufedb\000\002\001\ufee0\000\002\001\uff61" +
    "\000\004\206\u0122\001\ufedd\000\002\001\ufede\000\002\001" +
    "\ufee1\000\002\001\000\000\002\001\uffa3\000\002\001\ufecf" +
    "\000\002\001\ufed0\000\002\001\ufece\000\002\001\uffe1\000" +
    "\002\001\ufee4\000\002\001\uff6c\000\002\001\uff7b\000\002" +
    "\001\uff91\000\002\001\ufee5\000\002\001\ufec3\000\002\001" +
    "\ufec2\000\002\001\uff84\000\002\001\uff92\000\002\001\uffb3" +
    "\000\004\137\u013a\001\002\000\002\001\uff46\000\002\001" +
    "\uff43\000\004\137\u0139\001\002\000\002\001\uff42\000\002" +
    "\001\uff45\000\002\001\uff44\000\002\001\uff53\000\002\001" +
    "\uff6a\000\002\001\uffa4\000\002\001\uff6e\000\002\001\ufebb" +
    "\000\002\001\uff80\000\002\001\ufebc\000\002\001\ufec9\000" +
    "\002\001\ufec6\000\002\001\ufec7\000\002\001\uffa9\000\002" +
    "\001\ufec8\000\002\001\uff16\000\002\001\uff10\000\002\001" +
    "\ufec5\000\002\001\uff15\000\002\001\uff65\000\002\001\uff13" +
    "\000\002\001\uff12\000\002\001\uff14\000\002\001\uff0f\000" +
    "\002\001\ufec4\000\002\001\uff11\000\002\001\uff17\000\002" +
    "\001\uff18\000\002\001\uff47\000\002\001\uff3f\000\002\001" +
    "\uff3e\000\002\001\uff68\000\002\001\uff48\000\002\001\uff40" +
    "\000\002\001\uff3d\000\002\001\uff41\000\002\001\uff34\000" +
    "\002\001\uff28\000\002\001\uff32\000\002\001\uff2c\000\002" +
    "\001\uff37\000\002\001\uff67\000\002\001\uff39\000\002\001" +
    "\uff24\000\002\001\uff2b\000\002\001\uff35\000\002\001\uff33" +
    "\000\002\001\uff27\000\002\001\uff25\000\002\001\uff3a\000" +
    "\002\001\uff29\000\002\001\uff2f\000\002\001\uff30\000\002" +
    "\001\uff36\000\002\001\uff26\000\002\001\uff31\000\002\001" +
    "\uff2e\000\002\001\uff23\000\002\001\uff22\000\002\001\uff2a" +
    "\000\002\001\uff3b\000\002\001\uff38\000\002\001\uff2d\000" +
    "\002\001\uff87\000\002\001\uffbc\000\002\001\uff59\000\002" +
    "\001\ufebd\000\002\001\uffe0\000\002\001\ufebe\000\002\001" +
    "\uffb9\000\002\001\ufed6\000\002\001\ufed8\000\006\205\u0186" +
    "\216\u0187\001\ufebf\000\004\206\u0184\001\ufed1\000\002\001" +
    "\uff60\000\002\001\ufed5\000\002\001\ufed2\000\002\001\ufed7" +
    "\000\002\001\ufec1\000\002\001\ufec0\000\002\001\ufed4\000" +
    "\002\001\uff6f\000\002\001\uff7f\000\002\001\uff51\000\002" +
    "\001\uff50\000\002\001\uff69\000\002\001\uffde\000\002\001" +
    "\uffbd\000\002\001\uff7e\000\002\001\uffa5\000\002\001\uffb5" +
    "\000\002\001\uffb2\000\002\001\uff1c\000\002\001\uff19\000" +
    "\002\001\uff1a\000\002\001\uff1b\000\002\001\uff5e\000\002" +
    "\001\ufeba\000\002\001\uffb8\000\002\001\uff82\000\002\001" +
    "\ufffe\000\002\001\ufddc\000\002\001\ufddb\000\002\001\ufdda" +
    "\000\002\001\ufddf\000\010\006\u019d\010\u019f\245\u01a2\001" +
    "\ufde1\000\002\001\ufdd9\000\004\012\u01a5\001\ufdd7\000\002" +
    "\001\ufddd\000\016\004\u01a6\005\u01ab\006\u01af\010\u01a7\011" +
    "\u01a9\012\u01ac\001\002\000\002\001\ufdcd\000\004\013\u01bc" +
    "\001\002\000\002\001\ufdd6\000\002\001\ufdd2\000\002\001" +
    "\ufdd3\000\002\001\ufdce\000\016\004\u01a6\005\u01ab\006\u01af" +
    "\010\u01a7\011\u01a9\012\u01ac\001\002\000\002\001\ufdd4\000" +
    "\020\004\u01a6\005\u01ab\006\u01af\010\u01a7\011\u01a9\012\u01ac" +
    "\014\u01b9\001\002\000\006\007\u01b1\013\u01b4\001\ufdcb\000" +
    "\006\007\u01b1\013\u01b4\001\ufdcc\000\002\001\ufdc6\000\002" +
    "\001\ufdca\000\004\006\u01b6\001\002\000\002\001\ufdc7\000" +
    "\002\001\ufdcf\000\002\001\ufdc8\000\002\001\ufdc9\000\002" +
    "\001\ufdd5\000\002\001\ufdd8\000\020\004\u01a6\005\u01ab\006" +
    "\u01af\010\u01a7\011\u01a9\012\u01ac\014\u01bb\001\002\000\002" +
    "\001\ufdd0\000\004\006\u01af\001\002\000\002\001\ufdd1\000" +
    "\002\001\ufdde\000\002\001\uffab\000\002\001\ufed9\000\004" +
    "\137\u01c2\001\002\000\002\001\ufeda\000\002\001\uff70\000" +
    "\002\001\uffa2\000\002\001\uff58\000\002\001\uffa8\000\002" +
    "\001\uff08\000\002\001\uff0a\000\002\001\uff09\000\002\001" +
    "\uff64\000\002\001\uff0e\000\036\015\u01d2\016\u01d3\023\u01d9" +
    "\055\u01d8\121\u01e0\134\u01df\136\u01d6\217\u01dc\240\u01d4\251" +
    "\u01d5\260\u01dd\264\u01da\312\u01de\u0103\u01d7\001\002\000\002" +
    "\001\uff0c\000\002\001\uff07\000\002\001\uff0b\000\002\001" +
    "\uff0d\000\002\001\uff06\000\002\001\ufefd\000\002\001\ufefc" +
    "\000\002\001\ufef5\000\002\001\ufef4\000\002\001\ufef7\000" +
    "\002\001\ufef0\000\002\001\ufefa\000\002\001\ufefb\000\002" +
    "\001\ufef2\000\002\001\uff62\000\002\001\ufef6\000\002\001" +
    "\ufef3\000\002\001\ufef1\000\002\001\ufef8\000\002\001\ufef9" +
    "\000\002\001\uff5d\000\002\001\uff6b\000\002\001\uff90\000" +
    "\002\001\ufeef\000\002\001\ufeee\000\002\001\ufeed\000\002" +
    "\001\ufeeb\000\002\001\ufee8\000\002\001\ufee6\000\002\001" +
    "\ufeea\000\002\001\ufeec\000\002\001\ufee9\000\002\001\ufee7" +
    "\000\002\001\uff7d\000\002\001\ufe9f\000\002\001\ufe90\000" +
    "\002\001\ufe92\000\002\001\ufe9b\000\002\001\ufe9d\000\002" +
    "\001\ufe95\000\002\001\ufea2\000\002\001\ufe8c\000\002\001" +
    "\uff57\000\002\001\ufe94\000\002\001\ufea4\000\002\001\ufea0" +
    "\000\002\001\ufe9e\000\002\001\ufe8f\000\002\001\ufe8d\000" +
    "\002\001\ufea5\000\002\001\ufe91\000\002\001\ufe98\000\002" +
    "\001\ufea1\000\002\001\ufe8e\000\002\001\ufe9c\000\002\001" +
    "\ufe97\000\002\001\ufe8a\000\002\001\ufe89\000\002\001\ufe93" +
    "\000\002\001\ufe8b\000\002\001\ufe9a\000\002\001\ufea3\000" +
    "\002\001\ufe96\000\002\001\ufe99\000\002\001\uff63\000\002" +
    "\001\uff00\000\002\001\uff01\000\002\001\ufe6d\000\002\001" +
    "\ufe3d\000\002\001\ufe6a\000\002\001\ufe52\000\002\001\ufe31" +
    "\000\002\001\ufe28\000\002\001\ufe3a\000\002\001\ufe49\000" +
    "\002\001\ufe55\000\002\001\ufe4d\000\002\001\ufe48\000\002" +
    "\001\ufe36\000\002\001\ufe5a\000\002\001\ufe3b\000\002\001" +
    "\ufe50\000\002\001\ufe32\000\002\001\ufe69\000\002\001\ufe45" +
    "\000\002\001\ufe27\000\002\001\ufe6b\000\002\001\ufe34\000" +
    "\004\200\u0260\001\ufe39\000\002\001\ufe24\000\002\001\ufe4e" +
    "\000\002\001\ufe5f\000\002\001\ufe26\000\002\001\ufe60\000" +
    "\002\001\ufe25\000\002\001\ufe3c\000\002\001\ufe64\000\002" +
    "\001\ufe20\000\002\001\ufe46\000\002\001\ufe44\000\002\001" +
    "\ufe5c\000\002\001\ufe4f\000\002\001\ufe37\000\002\001\ufe53" +
    "\000\002\001\uff55\000\002\001\ufe4b\000\002\001\ufe30\000" +
    "\002\001\ufe47\000\002\001\ufe42\000\002\001\ufe67\000\002" +
    "\001\ufe1f\000\002\001\ufe62\000\002\001\ufe35\000\002\001" +
    "\ufe3e\000\002\001\ufe40\000\002\001\ufe2a\000\002\001\ufe22" +
    "\000\002\001\ufe2f\000\002\001\ufe59\000\002\001\ufe21\000" +
    "\002\001\ufe66\000\002\001\ufe33\000\002\001\ufe57\000\002" +
    "\001\ufe58\000\002\001\ufe2e\000\002\001\ufe6e\000\002\001" +
    "\ufe56\000\002\001\ufe5b\000\002\001\ufe68\000\002\001\ufe51" +
    "\000\002\001\ufe63\000\002\001\ufe2b\000\002\001\ufe2c\000" +
    "\002\001\ufe54\000\002\001\ufe5d\000\002\001\ufe2d\000\002" +
    "\001\ufe4c\000\002\001\ufe41\000\002\001\ufe29\000\002\001" +
    "\ufe61\000\002\001\ufe3f\000\002\001\ufe43\000\002\001\ufe65" +
    "\000\002\001\ufe23\000\002\001\ufe4a\000\002\001\ufe5e\000" +
    "\002\001\ufe6c\000\002\001\ufe38\000\002\001\uff21\000\002" +
    "\001\uff66\000\002\001\uff1e\000\002\001\uff1f\000\002\001" +
    "\uff20\000\002\001\uff1d\000\002\001\uffb1\000\002\001\uff81" +
    "\000\002\001\uffa7\000\002\001\uff71\000\002\001\ufe81\000" +
    "\002\001\ufe75\000\002\001\ufe79\000\002\001\ufe7f\000\002" +
    "\001\ufe84\000\002\001\ufe78\000\002\001\ufe71\000\002\001" +
    "\ufe86\000\002\001\ufe82\000\002\001\ufe80\000\002\001\ufe74" +
    "\000\002\001\ufe72\000\002\001\uff54\000\002\001\ufe87\000" +
    "\002\001\ufe76\000\002\001\ufe7c\000\002\001\ufe7d\000\002" +
    "\001\ufe83\000\002\001\ufe73\000\002\001\ufe7e\000\002\001" +
    "\ufe7b\000\002\001\ufe70\000\002\001\ufe6f\000\002\001\ufe77" +
    "\000\002\001\ufe88\000\002\001\ufe85\000\002\001\ufe7a" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u0283\000\164\002\147\003\045\004\214\005\171\006" +
    "\176\007\065\010\154\011\166\012\165\013\143\014\152" +
    "\021\020\022\151\023\150\024\017\025\153\026\043\027" +
    "\144\030\016\031\162\032\200\033\216\034\160\035\124" +
    "\036\142\037\023\040\025\041\056\042\201\043\126\044" +
    "\077\045\050\046\101\047\220\050\134\051\237\052\005" +
    "\053\133\054\203\055\217\056\022\057\170\060\235\061" +
    "\061\062\105\063\111\064\207\065\212\066\163\067\175" +
    "\070\110\071\173\072\054\073\030\074\222\075\113\130" +
    "\031\001\001\000\004\016\u0276\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\134\u0267\001\001\000\002\001\001\000\004\125\u0261" +
    "\001\001\000\004\102\u0234\001\001\000\002\001\001\000" +
    "\006\116\u020c\117\u020d\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\015\u01f6\001\001\000\002" +
    "\001\001\000\006\103\u01da\135\u01ed\001\001\000\004\127" +
    "\u01e2\001\001\000\002\001\001\000\004\117\u01e0\001\001" +
    "\000\002\001\001\000\012\061\u01c6\062\u01cd\066\u01d0\101" +
    "\u01c9\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\122" +
    "\u01be\001\001\000\002\001\001\000\014\145\u01a2\146\u019d" +
    "\152\u019b\153\u01a0\154\u019f\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\134\u019a\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\132\u0197\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\114\u0192" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\110\u018c\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\144\u0181\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\142\u017a\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\076\u0160\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\113\u0156\117\u0158\001\001" +
    "\000\002\001\001\000\002\001\001\000\010\077\u0152\100" +
    "\u014a\133\u0151\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\123\u0144\001\001\000\002\001" +
    "\001\000\004\134\u013f\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\126\u013b\001" +
    "\001\000\004\112\u0132\001\001\000\006\127\u012c\136\u012b" +
    "\001\001\000\004\141\u0128\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\104\u011f\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\121\u011b\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\120\u0119\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\143\u0113\001\001\000\002\001\001\000\004\124\u010f" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\131\u010b\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\115\u0104\001\001\000\002\001\001\000\004\020" +
    "\332\001\001\000\004\017\312\001\001\000\004\137\262" +
    "\001\001\000\002\001\001\000\004\140\251\001\001\000" +
    "\004\111\247\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\105\u0122\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\107\u0187\001\001\000\004\106" +
    "\u0184\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\010\145" +
    "\u01a2\146\u019d\154\u01bd\001\001\000\002\001\001\000\004" +
    "\147\u01a3\001\001\000\002\001\001\000\012\150\u01ad\151" +
    "\u01a7\155\u01a9\156\u01ac\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\012\150\u01b9\151\u01a7\155\u01a9" +
    "\156\u01ac\001\001\000\002\001\001\000\010\151\u01b7\155" +
    "\u01a9\156\u01ac\001\001\000\012\157\u01b4\160\u01af\161\u01b1" +
    "\162\u01b2\001\001\000\006\161\u01b6\162\u01b2\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\010\151\u01b7" +
    "\155\u01a9\156\u01ac\001\001\000\002\001\001\000\004\156" +
    "\u01bc\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\103\u01da\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$CICSParser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$CICSParser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$CICSParser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 1;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}


  /** User initialization code. */
  public void user_init() throws java.lang.Exception
    {

  action_obj.initActionClass();

    }


      Configuration cfg  = ConfigurationBase.getInstance();
      ParserInfo    info = ParserInfo.getInstance();

      public void syntax_error(Symbol token) {
           
          Symbol s = (Symbol) token.value;
          int col = cfg.getInteger(CFG.MARGIN_LEFT,  0);
          col = col + s.right + 1;

          throw new ParseException(MSG.EXCEPTION_SYNTAX, 
                                   info.getModuleName(), 
                                   s.left + info.getOffset(), 
                                   col, 
                                   (String) s.value);
      }

      public void unrecovered_syntax_error(Symbol token) throws Exception {
          Symbol s = (Symbol) token.value;
          throw new ParseException(MSG.EXCEPTION_CUP, 
                                  info.getModuleName(), s.left + info.getOffset(), s.right + 1, (String) s.value); 
      }

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$CICSParser$actions {



   SDPSymbolFactory symbolFactory = new SDPSymbolFactory();
   ParserInfo  info        = ParserInfo.getInstance();
   CICSCode    code        = new CICSCode(info.getModule());
   StmtCICS    stmt        = null;
   Option      currOption  = null;


   public void initActionClass() {
   }

   public String getSymbolName(Symbol s)    { return (String) s.value; }
   public void debug(String txt)            { System.err.println(txt); }
   public void print(String txt)            { System.out.println(txt); }


  private final CICSParser parser;

  /** Constructor */
  CUP$CICSParser$actions(CICSParser parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$CICSParser$do_action(
    int                        CUP$CICSParser$act_num,
    java_cup.runtime.lr_parser CUP$CICSParser$parser,
    java.util.Stack            CUP$CICSParser$stack,
    int                        CUP$CICSParser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$CICSParser$result;

      /* select the action based on the action number */
      switch (CUP$CICSParser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 571: // padre_indicator ::= IN 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("padre_indicator",112, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 570: // padre_indicator ::= OF 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("padre_indicator",112, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 569: // padre ::= padre_indicator ID 
            {
              SDPSymbol RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol p = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w.setPrefix(p);    
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("padre",111, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 568: // padres ::= padres padre 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w.add(w2); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("padres",110, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 567: // padres ::= padre 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w;         
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("padres",110, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 566: // padres_lst ::= 
            {
              SDPSymbol RESULT =null;
		 RESULT = null; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("padres_lst",109, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 565: // padres_lst ::= padres 
            {
              SDPSymbol RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol p = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = p;    
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("padres_lst",109, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 564: // number ::= DECIMAL 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("number",107, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 563: // number ::= ENTERO 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("number",107, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 562: // ident_base ::= ID padres_lst 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w.add(w2); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("ident_base",108, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 561: // cics_parm ::= LPAR cics_parms RPAR 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		 RESULT = w.setFunction();         
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_parm",103, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-2)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 560: // cics_parm ::= LENGTH OF ident_base 
            {
              SDPSymbol RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-2)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-2)).right;
		SDPSymbol w1 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-2)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w.setPrefix(w1.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_parm",103, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-2)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 559: // cics_parm ::= LITERAL 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_parm",103, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 558: // cics_parm ::= number 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_parm",103, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 557: // cics_parm ::= ident_base 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_parm",103, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 556: // cics_parms ::= cics_parms cics_parm 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w.add(w2); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_parms",102, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 555: // cics_parms ::= cics_parm 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w;         
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_parms",102, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 554: // cics_parm_opt ::= 
            {
              SDPSymbol RESULT =null;

              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_parm_opt",101, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 553: // cics_parm_opt ::= LPAR cics_parms RPAR 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		 currOption.setFunction(); 
                                                currOption.addParm(w);    
                                             
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_parm_opt",101, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-2)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 552: // cics_reserved_word ::= PROGRAM 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_reserved_word",100, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 551: // cics_reserved_word ::= LENGTH 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_reserved_word",100, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 550: // cics_option_name ::= cics_reserved_word 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 currOption = new Option(w); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_option_name",99, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 549: // cics_option_name ::= ID 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 currOption = new Option(w); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_option_name",99, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 548: // cics_option ::= cics_option_name cics_parm_opt 
            {
              Option RESULT =null;
		int oleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int oright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol o = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;

              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_option",106, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 547: // cics_options_lst ::= cics_options_lst cics_option 
            {
              Option RESULT =null;
		int oleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int oright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		Option o = (Option)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = stmt.addOption(currOption); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_options_lst",105, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 546: // cics_options_lst ::= cics_option 
            {
              Option RESULT =null;
		int oleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int oright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		Option o = (Option)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = stmt.addOption(currOption); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_options_lst",105, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 545: // cics_options ::= 
            {
              Option RESULT =null;

              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_options",104, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 544: // cics_options ::= cics_options_lst 
            {
              Option RESULT =null;
		int cleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int cright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		Option c = (Option)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;

              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_options",104, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 543: // cics_set ::= WORKREQUEST 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_set",14, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 542: // cics_set ::= WEBSERVICE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_set",14, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 541: // cics_set ::= WEB 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_set",14, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 540: // cics_set ::= VTAM 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_set",14, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 539: // cics_set ::= VOLUME 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_set",14, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 538: // cics_set ::= URIMAP 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_set",14, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 537: // cics_set ::= UOWLINK 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_set",14, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 536: // cics_set ::= UOW 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_set",14, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 535: // cics_set ::= TSQNAME 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_set",14, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 534: // cics_set ::= TSQUEUE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_set",14, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 533: // cics_set ::= TRANSACTION 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_set",14, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 532: // cics_set ::= TRANDUMPCODE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_set",14, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 531: // cics_set ::= TRANCLASS 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_set",14, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 530: // cics_set ::= TRACETYPE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_set",14, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 529: // cics_set ::= TRACEFLAG 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_set",14, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 528: // cics_set ::= TRACEDEST 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_set",14, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 527: // cics_set ::= TERMINAL 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_set",14, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 526: // cics_set ::= TDQUEUE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_set",14, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 525: // cics_set ::= TCPIPSERVICE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_set",14, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 524: // cics_set ::= TCPIP 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_set",14, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 523: // cics_set ::= TCLASS 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_set",14, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 522: // cics_set ::= TASK 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_set",14, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 521: // cics_set ::= SYSTEM 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_set",14, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 520: // cics_set ::= SYSDUMPCODE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_set",14, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 519: // cics_set ::= STATISTICS 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_set",14, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 518: // cics_set ::= PROGRAM 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_set",14, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 517: // cics_set ::= PROCESSTYPE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_set",14, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 516: // cics_set ::= PIPELINE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_set",14, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 515: // cics_set ::= NETNAME 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_set",14, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 514: // cics_set ::= MONITOR 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_set",14, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 513: // cics_set ::= MODENAME 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_set",14, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 512: // cics_set ::= JVMPOOL 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_set",14, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 511: // cics_set ::= JOURNALNUM 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_set",14, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 510: // cics_set ::= JOURNALNAME 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_set",14, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 509: // cics_set ::= IRC 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_set",14, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 508: // cics_set ::= HOST 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_set",14, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 507: // cics_set ::= FILE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_set",14, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 506: // cics_set ::= ENQMODEL 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_set",14, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 505: // cics_set ::= DUMPDS 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_set",14, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 504: // cics_set ::= DSNAME 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_set",14, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 503: // cics_set ::= DISPATCHER 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_set",14, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 502: // cics_set ::= DELETSHIPPED 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_set",14, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 501: // cics_set ::= DB2TRAN 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_set",14, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 500: // cics_set ::= DB2ENTRY 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_set",14, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 499: // cics_set ::= DB2CONN 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_set",14, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 498: // cics_set ::= CORBASERVER 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_set",14, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 497: // cics_set ::= CONNECTION 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_set",14, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 496: // cics_set ::= CLASSCACHE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_set",14, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 495: // cics_set ::= BRFACILITY 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_set",14, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 494: // cics_set ::= AUTOINSTALL 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_set",14, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 493: // cics_perform ::= STATISTICS RECORD 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w.add(w2); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_perform",13, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 492: // cics_perform ::= SHUTDOWN 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;

              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_perform",13, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 491: // cics_perform ::= SECURITY REBUILD 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w.add(w2); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_perform",13, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 490: // cics_perform ::= RESETTIME 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_perform",13, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 489: // cics_perform ::= PIPELINE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_perform",13, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 488: // cics_perform ::= ENDAFFINITY 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_perform",13, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 487: // cics_perform ::= DUMP 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_perform",13, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 486: // cics_perform ::= DJAR 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_perform",13, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 485: // cics_perform ::= DELETSHIPPED 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_perform",13, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 484: // cics_perform ::= CORBASERVER 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_perform",13, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 483: // cics_perform ::= CLASSCACHE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_perform",13, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 482: // cics_inquire ::= WORKREQUEST 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 481: // cics_inquire ::= WEBSERVICE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 480: // cics_inquire ::= WEB 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 479: // cics_inquire ::= VTAM 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 478: // cics_inquire ::= VOLUME 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 477: // cics_inquire ::= URIMAP 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 476: // cics_inquire ::= UOWLINK 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 475: // cics_inquire ::= UOWENQ 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 474: // cics_inquire ::= UOWDSNFAIL 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 473: // cics_inquire ::= UOW 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 472: // cics_inquire ::= TSQNAME 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 471: // cics_inquire ::= TSQUEUE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 470: // cics_inquire ::= TSPOOL 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 469: // cics_inquire ::= TSMODEL 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 468: // cics_inquire ::= TRANSACTION 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 467: // cics_inquire ::= TRANDUMPCODE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 466: // cics_inquire ::= TRANCLASS 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 465: // cics_inquire ::= TRACETYPE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 464: // cics_inquire ::= TRACEFLAG 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 463: // cics_inquire ::= TRACEDEST 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 462: // cics_inquire ::= TERMINAL 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 461: // cics_inquire ::= TDQUEUE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 460: // cics_inquire ::= TCPIPSERVICE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 459: // cics_inquire ::= TCPIP 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 458: // cics_inquire ::= TCLASS 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 457: // cics_inquire ::= TASK LIST 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 456: // cics_inquire ::= TASK 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 455: // cics_inquire ::= SYSTEM 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 454: // cics_inquire ::= SYSDUMPCODE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 453: // cics_inquire ::= SUBPOOL 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 452: // cics_inquire ::= STREAMNAME 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 451: // cics_inquire ::= STORAGE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 450: // cics_inquire ::= STATISTICS 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 449: // cics_inquire ::= RRMS 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 448: // cics_inquire ::= REQUESTMODEL 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 447: // cics_inquire ::= REQID 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 446: // cics_inquire ::= PROGRAM 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 445: // cics_inquire ::= PROFILE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 444: // cics_inquire ::= PROCESSTYPE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 443: // cics_inquire ::= PIPELINE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 442: // cics_inquire ::= PARTNER 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 441: // cics_inquire ::= NETNAME 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 440: // cics_inquire ::= MVSTCB 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 439: // cics_inquire ::= MONITOR 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 438: // cics_inquire ::= MODENAME 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 437: // cics_inquire ::= JVMPROFILE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 436: // cics_inquire ::= JVMPOOL 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 435: // cics_inquire ::= JVM 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 434: // cics_inquire ::= JOURNALNUM 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 433: // cics_inquire ::= JOURNALNAME 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 432: // cics_inquire ::= JOURNALMODEL 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 431: // cics_inquire ::= IRC 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 430: // cics_inquire ::= HOST 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 429: // cics_inquire ::= FILE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 428: // cics_inquire ::= EXITPROGRAM 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 427: // cics_inquire ::= EXCI 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 426: // cics_inquire ::= ENQMODEL 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 425: // cics_inquire ::= ENQ 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 424: // cics_inquire ::= DUMPDS 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 423: // cics_inquire ::= DSNAME 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 422: // cics_inquire ::= DOCTEMPLATE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 421: // cics_inquire ::= DJAR 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 420: // cics_inquire ::= DISPATCHER 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 419: // cics_inquire ::= DELETSHIPPED 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 418: // cics_inquire ::= DB2TRAN 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 417: // cics_inquire ::= DB2ENTRY 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 416: // cics_inquire ::= DB2CONN 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 415: // cics_inquire ::= CORBASERVER 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 414: // cics_inquire ::= CONNECTION 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 413: // cics_inquire ::= CLASSCACHE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 412: // cics_inquire ::= CFDTPOOL 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 411: // cics_inquire ::= BRFACILITY 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 410: // cics_inquire ::= BEAN 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 409: // cics_inquire ::= AUTOINSTALL 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 408: // cics_inquire ::= AUTINSTMODEL 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 407: // cics_inquire ::= TIMER 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 406: // cics_inquire ::= PROCESS 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 405: // cics_inquire ::= EVENT 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 404: // cics_inquire ::= CONTAINER 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 403: // cics_inquire ::= ACTIVITYID 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_inquire",64, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 402: // cics_disable ::= WEBSERVICE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_disable",12, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 401: // cics_disable ::= URIMAP 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_disable",12, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 400: // cics_disable ::= TSMODEL 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_disable",12, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 399: // cics_disable ::= TRANSACTION 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_disable",12, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 398: // cics_disable ::= TRANCLASS 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_disable",12, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 397: // cics_disable ::= TERMINAL 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_disable",12, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 396: // cics_disable ::= TDQUEUE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_disable",12, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 395: // cics_disable ::= TCPIPSERVICE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_disable",12, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 394: // cics_disable ::= REQUESTMODEL 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_disable",12, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 393: // cics_disable ::= PROGRAM 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_disable",12, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 392: // cics_disable ::= PROFILE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_disable",12, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 391: // cics_disable ::= PROCESSTYPE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_disable",12, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 390: // cics_disable ::= PIPELINE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_disable",12, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 389: // cics_disable ::= PARTNER 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_disable",12, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 388: // cics_disable ::= JOURNALNAME 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_disable",12, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 387: // cics_disable ::= JOURNALMODEL 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_disable",12, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 386: // cics_disable ::= FILE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_disable",12, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 385: // cics_disable ::= ENQMODEL 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_disable",12, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 384: // cics_disable ::= DOCTEMPLATE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_disable",12, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 383: // cics_disable ::= DJAR 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_disable",12, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 382: // cics_disable ::= DB2TRAN 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_disable",12, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 381: // cics_disable ::= DB2ENTRY 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_disable",12, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 380: // cics_disable ::= DB2CONN 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_disable",12, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 379: // cics_disable ::= CORBASERVER 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_disable",12, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 378: // cics_disable ::= CONNECTION 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_disable",12, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 377: // cics_disable ::= AUTINSTMODEL 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_disable",12, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 376: // cics_create ::= WEBSERVICE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_create",11, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 375: // cics_create ::= URIMAP 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_create",11, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 374: // cics_create ::= TYPETERM 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_create",11, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 373: // cics_create ::= TSMODEL 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_create",11, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 372: // cics_create ::= TRANSACTION 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_create",11, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 371: // cics_create ::= TRANCLASS 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_create",11, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 370: // cics_create ::= TERMINAL 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_create",11, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 369: // cics_create ::= TDQUEUE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_create",11, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 368: // cics_create ::= TCPIPSERVICE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_create",11, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 367: // cics_create ::= SESSIONS 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_create",11, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 366: // cics_create ::= REQUESTMODEL 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_create",11, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 365: // cics_create ::= PROGRAM 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_create",11, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 364: // cics_create ::= PROFILE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_create",11, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 363: // cics_create ::= PROCESSTYPE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_create",11, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 362: // cics_create ::= PIPELINE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_create",11, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 361: // cics_create ::= PARTNER 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_create",11, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 360: // cics_create ::= PARTITIONSET 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_create",11, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 359: // cics_create ::= MAPSET 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_create",11, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 358: // cics_create ::= LSRPOOL 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_create",11, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 357: // cics_create ::= JOURNALMODEL 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_create",11, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 356: // cics_create ::= FILE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_create",11, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 355: // cics_create ::= ENQMODEL 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_create",11, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 354: // cics_create ::= DOCTEMPLATE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_create",11, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 353: // cics_create ::= DJAR 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_create",11, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 352: // cics_create ::= DB2TRAN 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_create",11, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 351: // cics_create ::= DB2ENTRY 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_create",11, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 350: // cics_create ::= DB2CONN 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_create",11, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 349: // cics_create ::= CORBASERVER 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_create",11, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 348: // cics_create ::= CONNECTION 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_create",11, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 347: // cics_web ::= WRITE HTTPHEADER 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w.add(w2); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_web",93, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 346: // cics_web ::= STARTBROWSE HTTPHEADER 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w.add(w2); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_web",93, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 345: // cics_web ::= STARTBROWSE FORMFIELD 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w.add(w2); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_web",93, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 344: // cics_web ::= SEND 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w;         
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_web",93, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 343: // cics_web ::= RETRIEVE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w;         
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_web",93, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 342: // cics_web ::= RECEIVE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w;         
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_web",93, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 341: // cics_web ::= READNEXT HTTPHEADER 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w.add(w2); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_web",93, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 340: // cics_web ::= READNEXT FORMFIELD 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w.add(w2); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_web",93, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 339: // cics_web ::= READ HTTPHEADER 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w.add(w2); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_web",93, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 338: // cics_web ::= READ FORMFIELD 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w.add(w2); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_web",93, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 337: // cics_web ::= PARSE URL 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w.add(w2); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_web",93, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 336: // cics_web ::= OPEN 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w;         
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_web",93, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 335: // cics_web ::= ENDBROWSE HTTPHEADER 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w.add(w2); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_web",93, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 334: // cics_web ::= ENDBROWSE FORMFIELD 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w.add(w2); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_web",93, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 333: // cics_web ::= CONVERSE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w;         
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_web",93, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 332: // cics_web ::= CLOSE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w;         
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_web",93, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 331: // cics_wsacontext ::= GET 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_wsacontext",97, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 330: // cics_wsacontext ::= DELETE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_wsacontext",97, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 329: // cics_wsacontext ::= BUILD 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_wsacontext",97, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 328: // cics_word_rollback ::= 
            {
              SDPSymbol RESULT =null;
		 RESULT = null; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_word_rollback",88, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 327: // cics_word_rollback ::= ROLLBACK 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w;    
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_word_rollback",88, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 326: // cics_ts_type ::= TD 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_ts_type",90, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 325: // cics_ts_type ::= TS 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_ts_type",90, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 324: // cics_transform ::= XMLTODATA 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_transform",96, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 323: // cics_transform ::= DATATOXML 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_transform",96, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 322: // cics_send_text ::= 
            {
              SDPSymbol RESULT =null;
		 RESULT = null; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_send_text",69, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 321: // cics_send_text ::= NOEDIT 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w;    
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_send_text",69, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 320: // cics_send_text ::= MAPPED 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w;    
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_send_text",69, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 319: // cics_terminal_wait ::= TERMINAL 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_terminal_wait",92, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 318: // cics_terminal_wait ::= SIGNAL 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_terminal_wait",92, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 317: // cics_tcpip ::= TCPIP 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_tcpip",89, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 316: // cics_tcpip ::= CERTIFICATE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_tcpip",89, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 315: // cics_startbrowse ::= PROCESS 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_startbrowse",81, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 314: // cics_startbrowse ::= EVENT 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_startbrowse",81, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 313: // cics_startbrowse ::= CONTAINER 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_startbrowse",81, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 312: // cics_startbrowse ::= ACTIVITY 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_startbrowse",81, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 311: // cics_start ::= CHANNEL 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_start",82, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 310: // cics_start ::= TRANSID 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_start",82, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 309: // cics_spool_mode ::= OUTPUT 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_spool_mode",87, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 308: // cics_spool_mode ::= INPUT 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_spool_mode",87, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 307: // cics_soap ::= DELETE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_soap",95, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 306: // cics_soap ::= CREATE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_soap",95, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 305: // cics_soap ::= ADD 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_soap",95, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 304: // cics_send_map ::= 
            {
              SDPSymbol RESULT =null;

              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_send_map",68, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 303: // cics_send_map ::= MAPPINGDEV 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_send_map",68, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 302: // cics_send_types ::= 
            {
              SDPSymbol RESULT =null;
		 RESULT = null;      
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_send_types",98, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 301: // cics_send_types ::= TEXT cics_send_text 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w.add(w2); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_send_types",98, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 300: // cics_send_types ::= PARTNSET 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w;         
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_send_types",98, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 299: // cics_send_types ::= PAGE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w;         
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_send_types",98, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 298: // cics_send_types ::= MAP cics_send_map 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w.add(w2); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_send_types",98, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 297: // cics_send_types ::= CONTROL 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w;         
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_send_types",98, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 296: // cics_retrieve ::= SUBEVENT 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w;         
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_retrieve",80, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 295: // cics_retrieve ::= REATTACH EVENT 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w.add(w2); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_retrieve",80, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 294: // cics_reset ::= ACTIVITY 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_reset",79, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 293: // cics_reset ::= ACQPROCESS 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_reset",79, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 292: // cics_receive_map ::= 
            {
              SDPSymbol RESULT =null;
		 RESULT = null; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_receive_map",67, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 291: // cics_receive_map ::= MAPPINGDEV 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w;    
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_receive_map",67, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 290: // cics_receive ::= 
            {
              SDPSymbol RESULT =null;
		 RESULT = null;      
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_receive",66, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 289: // cics_receive ::= PARTN 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w;         
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_receive",66, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 288: // cics_receive ::= MAP cics_receive_map 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w.add(w2); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_receive",66, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 287: // cics_link ::= LINK ACTIVITY 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w.add(w2); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_link",78, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 286: // cics_link ::= ACQPROCESS 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w;         
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_link",78, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 285: // cics_journal ::= JOURNALNUM 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_journal",85, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 284: // cics_journal ::= JOURNALNAME 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_journal",85, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 283: // cics_issue_terminal ::= RESET 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_issue_terminal",91, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 282: // cics_issue_terminal ::= PRINT 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_issue_terminal",91, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 281: // cics_issue_terminal ::= PASS 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_issue_terminal",91, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 280: // cics_issue_terminal ::= LOAD 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_issue_terminal",91, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 279: // cics_issue_terminal ::= ERASEAUP 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_issue_terminal",91, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 278: // cics_issue_terminal ::= EODS 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_issue_terminal",91, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 277: // cics_issue_terminal ::= ENDOUTPUT 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_issue_terminal",91, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 276: // cics_issue_terminal ::= ENDFILE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_issue_terminal",91, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 275: // cics_issue_terminal ::= DISCONNECT 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_issue_terminal",91, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 274: // cics_issue_terminal ::= COPY 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_issue_terminal",91, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 273: // cics_issue ::= WAIT 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_issue",65, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 272: // cics_issue ::= SIGNAL 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_issue",65, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 271: // cics_issue ::= REPLACE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_issue",65, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 270: // cics_issue ::= RECEIVE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_issue",65, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 269: // cics_issue ::= QUERY 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_issue",65, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 268: // cics_issue ::= PREPARE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_issue",65, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 267: // cics_issue ::= NOTE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_issue",65, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 266: // cics_issue ::= ERROR 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_issue",65, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 265: // cics_issue ::= ERASE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_issue",65, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 264: // cics_issue ::= END 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_issue",65, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 263: // cics_issue ::= CONFIRMATION 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_issue",65, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 262: // cics_issue ::= ADD 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_issue",65, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 261: // cics_issue ::= ABORT 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_issue",65, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 260: // cics_issue ::= ABEND 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_issue",65, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 259: // cics_invoke ::= WEBSERVICE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_invoke",94, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 258: // cics_invoke ::= SERVICE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_invoke",94, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 257: // cics_get_types ::= cics_counter_type 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_get_types",76, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 256: // cics_get_types ::= CONTAINER 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_get_types",76, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 255: // cics_getnext ::= PROCESS 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_getnext",75, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 254: // cics_getnext ::= EVENT 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_getnext",75, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 253: // cics_getnext ::= CONTAINER 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_getnext",75, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 252: // cics_getnext ::= ACTIVITY 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_getnext",75, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 251: // cics_gds ::= cics_stmt_connect 
            {
              SDPSymbol RESULT =null;

              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_gds",63, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 250: // cics_gds ::= cics_stmt_issue 
            {
              SDPSymbol RESULT =null;

              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_gds",63, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 249: // cics_gds ::= cics_stmt_extract 
            {
              SDPSymbol RESULT =null;

              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_gds",63, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 248: // cics_gds ::= WAIT 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_gds",63, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 247: // cics_gds ::= SEND 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_gds",63, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 246: // cics_gds ::= RECEIVE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_gds",63, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 245: // cics_gds ::= FREE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_gds",63, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 244: // cics_gds ::= ASSIGN 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_gds",63, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 243: // cics_gds ::= ALLOCATE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_gds",63, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 242: // cics_extract ::= STATISTICS 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_extract",61, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 241: // cics_extract ::= EXIT 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_extract",61, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 240: // cics_extract ::= PROCESS 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_extract",61, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 239: // cics_extract ::= ATTRIBUTES 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_extract",61, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 238: // cics_extract_types ::= TCT 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_extract_types",62, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 237: // cics_extract_types ::= LOGONMSG 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_extract_types",62, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 236: // cics_extract_types ::= ATTACH 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_extract_types",62, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 235: // cics_extract_types ::= WEB 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_extract_types",62, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 234: // cics_extract_types ::= cics_tcpip 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_extract_types",62, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 233: // cics_extract_types ::= cics_extract 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_extract_types",62, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 232: // cics_endbrowse ::= PROCESS 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_endbrowse",74, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 231: // cics_endbrowse ::= EVENT 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_endbrowse",74, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 230: // cics_endbrowse ::= CONTAINER 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_endbrowse",74, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 229: // cics_endbrowse ::= ACTIVITY 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_endbrowse",74, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 228: // cics_document ::= SET 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_document",83, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 227: // cics_document ::= RETRIEVE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_document",83, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 226: // cics_document ::= INSERT 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_document",83, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 225: // cics_document ::= DELETE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_document",83, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 224: // cics_document ::= CREATE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_document",83, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 223: // cics_discard ::= WEBSERVICE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_discard",60, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 222: // cics_discard ::= URIMAP 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_discard",60, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 221: // cics_discard ::= TSMODEL 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_discard",60, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 220: // cics_discard ::= TRANSACTION 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_discard",60, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 219: // cics_discard ::= TRANCLASS 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_discard",60, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 218: // cics_discard ::= TERMINAL 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_discard",60, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // cics_discard ::= TDQUEUE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_discard",60, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // cics_discard ::= TCPIPSERVICE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_discard",60, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // cics_discard ::= REQUESTMODEL 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_discard",60, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // cics_discard ::= PROGRAM 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_discard",60, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // cics_discard ::= PROFILE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_discard",60, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // cics_discard ::= PROCESSTYPE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_discard",60, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // cics_discard ::= PIPELINE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_discard",60, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // cics_discard ::= PARTNER 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_discard",60, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // cics_discard ::= JOURNALNAME 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_discard",60, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // cics_discard ::= JOURNALMODEL 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_discard",60, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // cics_discard ::= FILE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_discard",60, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // cics_discard ::= ENQMODEL 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_discard",60, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // cics_discard ::= DOCTEMPLATE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_discard",60, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // cics_discard ::= DJAR 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_discard",60, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // cics_discard ::= DB2TRAN 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_discard",60, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // cics_discard ::= DB2ENTRY 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_discard",60, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // cics_discard ::= DB2CONN 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_discard",60, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // cics_discard ::= CORBASERVER 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_discard",60, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // cics_discard ::= CONNECTION 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_discard",60, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // cics_discard ::= AUTINSTMODEL 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_discard",60, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // cics_delete_types ::= 
            {
              SDPSymbol RESULT =null;

              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_delete_types",73, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // cics_delete_types ::= TIMER 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_delete_types",73, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // cics_delete_types ::= EVENT 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_delete_types",73, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // cics_delete_types ::= ACTIVITY 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_delete_types",73, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // cics_delete_types ::= cics_counter_type 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_delete_types",73, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // cics_delete_types ::= CONTAINER 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_delete_types",73, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // cics_define ::= TIMER 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w;         
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_define",72, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // cics_define ::= PROCESS 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w;         
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_define",72, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // cics_define ::= INPUT EVENT 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w.add(w2); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_define",72, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // cics_define ::= COMPOSITE EVENT 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w.add(w2); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_define",72, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // cics_define ::= ACTIVITY 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w;         
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_define",72, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // cics_counter_type ::= DCOUNTER 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_counter_type",77, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // cics_counter_type ::= COUNTER 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_counter_type",77, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // cics_counter_action ::= UPDATE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_counter_action",86, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // cics_counter_action ::= REWIND 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_counter_action",86, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // cics_counter_action ::= QUERY 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_counter_action",86, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // cics_counter_action ::= DEFINE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_counter_action",86, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // cics_check ::= TIMER 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_check",71, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // cics_check ::= ACTIVITY 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_check",71, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // cics_check ::= ACQPROCESS 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_check",71, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // cics_bif ::= DIGEST 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_bif",70, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // cics_bif ::= DEEDIT 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_bif",70, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // cics_address ::= 
            {
              SDPSymbol RESULT =null;

              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_address",84, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // cics_address ::= SET 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_address",84, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // cics_stmt_disable ::= DISABLE cics_disable 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_disable",4, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // cics_stmt_inquire ::= INQUIRE cics_inquire 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_inquire",7, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // cics_stmt_enable ::= ENABLE PROGRAM 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_enable",6, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // cics_stmt_create ::= CREATE cics_create 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_create",3, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // cics_stmt_collect ::= COLLECT STATISTICS 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_collect",2, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // cics_stmt_acquire ::= ACQUIRE TERMINAL 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_acquire",1, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // cics_stmt_perform ::= PERFORM cics_perform 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_perform",8, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // cics_stmt_set ::= SET cics_set 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_set",10, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // cics_stmt_resync ::= RESYNC ENTRYNAME 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_resync",9, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // cics_stmt_counter ::= cics_counter_action cics_counter_type 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_counter",39, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // cics_stmt_syncpoint ::= SYNCPOINT cics_word_rollback 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_syncpoint",51, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // cics_stmt_start ::= START cics_start 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_start",31, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // cics_stmt_send ::= SEND cics_send_types 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_send",49, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // cics_stmt_receive ::= RECEIVE cics_receive 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_receive",54, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // cics_stmt_issue ::= ISSUE cics_issue 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_issue",48, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // cics_stmt_get ::= GET cics_get_types 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_get",55, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // cics_stmt_gds ::= GDS cics_gds 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_gds",25, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // cics_stmt_extract ::= EXTRACT cics_extract_types 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_extract",47, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // cics_stmt_doc ::= DOCUMENT cics_document 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_doc",33, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // cics_stmt_discard ::= DISCARD cics_discard 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_discard",5, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // cics_stmt_delete ::= DELETE cics_delete_types 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_delete",56, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // cics_stmt_bif ::= BIF cics_bif 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_bif",29, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // cics_stmt_address ::= ADDRESS cics_address 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_address",34, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // cics_stmt_words ::= WRITE OPERATOR 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w.add(w2); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_words",59, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // cics_stmt_words ::= WAIT CONVID 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w.add(w2); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_words",59, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // cics_stmt_words ::= SIGNAL EVENT 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w.add(w2); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_words",59, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // cics_stmt_words ::= QUERY SECURITY 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w.add(w2); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_words",59, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // cics_stmt_words ::= MOVE CONTAINER 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w.add(w2); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_words",59, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // cics_stmt_words ::= PUT CONTAINER 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w.add(w2); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_words",59, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // cics_stmt_words ::= CONNECT PROCESS 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w.add(w2); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_words",59, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // cics_stmt_word ::= SUSPEND 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_word",58, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // cics_stmt_word ::= MONITOR 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_word",58, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // cics_stmt_word ::= FREE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_word",58, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // cics_stmt_word ::= CONVERSE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_word",58, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // cics_stmt_word ::= CANCEL 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_word",58, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // cics_stmt_word ::= ASSIGN 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_word",58, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // cics_stmt_word ::= ALLOCATE 
            {
              SDPSymbol RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = w; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_word",58, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // cics_stmt_two ::= cics_stmt_words 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_two",23, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // cics_stmt_one ::= cics_stmt_word 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_one",22, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // cics_group_terminal ::= WAIT cics_terminal_wait 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_terminal",45, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // cics_group_terminal ::= POINT 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w);         
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_terminal",45, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // cics_group_terminal ::= ISSUE cics_issue_terminal 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_terminal",45, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // cics_group_terminal ::= HANDLE AID 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_terminal",45, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // cics_group_terminal ::= BUILD ATTACH 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_terminal",45, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // cics_group_ts ::= WRITEQ cics_ts_type 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_ts",44, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // cics_group_ts ::= READQ cics_ts_type 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_ts",44, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // cics_group_ts ::= DELETEQ cics_ts_type 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_ts",44, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // cics_group_task ::= WAITCICS 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w);         
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_task",43, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // cics_group_task ::= WAIT EXTERNAL 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_task",43, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // cics_group_task ::= ENQ 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w);         
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_task",43, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // cics_group_task ::= DEQ 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w);         
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_task",43, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // cics_group_task ::= CHANGE TASK 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_task",43, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // cics_group_storage ::= GETMAIN 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_storage",42, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // cics_group_storage ::= FREEMAIN 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_storage",42, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // cics_group_spool ::= SPOOLWRITE 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w);         
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_spool",41, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // cics_group_spool ::= SPOOLREAD 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w);         
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_spool",41, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // cics_group_spool ::= SPOOLOPEN cics_spool_mode 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_spool",41, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // cics_group_spool ::= SPOOLCLOSE 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w);         
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_spool",41, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // cics_group_schedul ::= START BREXIT 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_schedul",40, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // cics_group_schedul ::= START ATTACH 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_schedul",40, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // cics_group_journaling ::= WRITE cics_journal 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_journaling",38, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // cics_group_journaling ::= WAIT cics_journal 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_journaling",38, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // cics_group_interval ::= WAIT EVENT 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_interval",37, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // cics_group_interval ::= START 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w);         
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_interval",37, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // cics_group_interval ::= RETRIEVE 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w);         
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_interval",37, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // cics_group_interval ::= POST 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w);         
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_interval",37, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // cics_group_interval ::= FORMATTIME 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w);         
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_interval",37, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // cics_group_interval ::= DELAY 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w);         
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_interval",37, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // cics_group_interval ::= ASKTIME 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w);         
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_interval",37, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // cics_group_file ::= WRITE 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_file",36, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // cics_group_file ::= UNLOCK 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_file",36, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // cics_group_file ::= STARTBR 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_file",36, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // cics_group_file ::= REWRITE 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_file",36, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // cics_group_file ::= RESETBR 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_file",36, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // cics_group_file ::= READPREV 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_file",36, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // cics_group_file ::= READNEXT 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_file",36, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // cics_group_file ::= READ 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_file",36, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // cics_group_file ::= ENDBR 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_file",36, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // cics_group_excep ::= PUSH HANDLE 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_excep",35, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // cics_group_excep ::= POP HANDLE 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_excep",35, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // cics_group_excep ::= IGNORE CONDITION 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_excep",35, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // cics_group_excep ::= HANDLE CONDITION 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_excep",35, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // cics_group_diag ::= ENTER TRACENUM 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_diag",32, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // cics_group_diag ::= DUMP TRANSACTION 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_diag",32, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // cics_group_bts ::= TEST EVENT 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_bts",30, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // cics_group_bts ::= STARTBROWSE cics_startbrowse 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_bts",30, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // cics_group_bts ::= RUN 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w);         
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_bts",30, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // cics_group_bts ::= RETRIEVE cics_retrieve 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_bts",30, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // cics_group_bts ::= RESUME 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w);         
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_bts",30, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // cics_group_bts ::= RESET cics_reset 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_bts",30, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // cics_group_bts ::= REMOVE SUBEVENT 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_bts",30, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // cics_group_bts ::= LINK cics_link 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_bts",30, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // cics_group_bts ::= GETNEXT cics_getnext 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_bts",30, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // cics_group_bts ::= FORCE TIMER 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_bts",30, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // cics_group_bts ::= ENDBROWSE cics_endbrowse 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_bts",30, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // cics_group_bts ::= DEFINE cics_define 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_bts",30, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // cics_group_bts ::= CHECK cics_check 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_bts",30, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // cics_group_bts ::= ADD SUBEVENT 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_bts",30, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // cics_group_bts ::= ACQUIRE 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w);         
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_bts",30, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // cics_group_bms ::= ROUTE 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_bms",28, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // cics_group_bms ::= PURGE MESSAGE 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_bms",28, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // cics_group_auth ::= VERIFY PASSWORD 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_auth",27, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // cics_group_auth ::= SIGNON 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w);         
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_auth",27, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // cics_group_auth ::= SIGNOFF 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w);         
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_auth",27, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // cics_group_auth ::= CHANGE PASSWORD 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_auth",27, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // cics_group_abend ::= HANDLE ABEND 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_abend",24, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // cics_group_abend ::= ABEND 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w);         
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_group_abend",24, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // cics_stmt_common ::= cics_stmt_suspend 
            {
              StmtCICS RESULT =null;

              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_common",21, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // cics_stmt_common ::= cics_stmt_receive 
            {
              StmtCICS RESULT =null;

              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_common",21, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // cics_stmt_common ::= cics_stmt_delete 
            {
              StmtCICS RESULT =null;

              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_common",21, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // cics_stmt_common ::= cics_stmt_get 
            {
              StmtCICS RESULT =null;

              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_common",21, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // cics_stmt_common ::= cics_stmt_converse 
            {
              StmtCICS RESULT =null;

              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_common",21, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // cics_stmt_common ::= cics_stmt_connect 
            {
              StmtCICS RESULT =null;

              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_common",21, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // cics_stmt_common ::= cics_stmt_send 
            {
              StmtCICS RESULT =null;

              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_common",21, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // cics_stmt_common ::= cics_stmt_assign 
            {
              StmtCICS RESULT =null;

              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_common",21, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // cics_stmt_common ::= cics_stmt_syncpoint 
            {
              StmtCICS RESULT =null;

              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_common",21, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // cics_stmt_common ::= cics_stmt_monitor 
            {
              StmtCICS RESULT =null;

              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_common",21, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // cics_stmt_common ::= cics_stmt_counter 
            {
              StmtCICS RESULT =null;

              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_common",21, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // cics_stmt_common ::= cics_stmt_address 
            {
              StmtCICS RESULT =null;

              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_common",21, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // cics_stmt_common ::= cics_stmt_doc 
            {
              StmtCICS RESULT =null;

              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_common",21, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // cics_stmt_common ::= cics_stmt_start 
            {
              StmtCICS RESULT =null;

              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_common",21, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // cics_stmt_common ::= cics_stmt_issue 
            {
              StmtCICS RESULT =null;

              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_common",21, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // cics_stmt_common ::= cics_stmt_wait 
            {
              StmtCICS RESULT =null;

              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_common",21, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // cics_stmt_common ::= cics_stmt_bif 
            {
              StmtCICS RESULT =null;

              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_common",21, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // cics_stmt_common ::= cics_stmt_gds 
            {
              StmtCICS RESULT =null;

              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_common",21, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // cics_stmt_common ::= cics_stmt_two 
            {
              StmtCICS RESULT =null;

              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_common",21, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // cics_stmt_common ::= cics_stmt_one 
            {
              StmtCICS RESULT =null;

              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt_common",21, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // cics_area_sys ::= cics_stmt_set 
            {
              StmtCICS RESULT =null;
		int sleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int sright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		StmtCICS s = (StmtCICS)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = s; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_area_sys",18, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // cics_area_sys ::= cics_stmt_resync 
            {
              StmtCICS RESULT =null;
		int sleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int sright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		StmtCICS s = (StmtCICS)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = s; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_area_sys",18, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // cics_area_sys ::= cics_stmt_perform 
            {
              StmtCICS RESULT =null;
		int sleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int sright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		StmtCICS s = (StmtCICS)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = s; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_area_sys",18, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // cics_area_sys ::= cics_stmt_inquire 
            {
              StmtCICS RESULT =null;
		int sleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int sright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		StmtCICS s = (StmtCICS)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = s; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_area_sys",18, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // cics_area_sys ::= cics_stmt_extract 
            {
              StmtCICS RESULT =null;
		int sleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int sright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		StmtCICS s = (StmtCICS)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = s; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_area_sys",18, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // cics_area_sys ::= cics_stmt_enable 
            {
              StmtCICS RESULT =null;
		int sleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int sright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		StmtCICS s = (StmtCICS)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = s; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_area_sys",18, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // cics_area_sys ::= cics_stmt_discard 
            {
              StmtCICS RESULT =null;
		int sleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int sright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		StmtCICS s = (StmtCICS)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = s; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_area_sys",18, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // cics_area_sys ::= cics_stmt_disable 
            {
              StmtCICS RESULT =null;
		int sleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int sright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		StmtCICS s = (StmtCICS)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = s; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_area_sys",18, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // cics_area_sys ::= cics_stmt_create 
            {
              StmtCICS RESULT =null;
		int sleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int sright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		StmtCICS s = (StmtCICS)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = s; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_area_sys",18, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // cics_area_sys ::= cics_stmt_collect 
            {
              StmtCICS RESULT =null;
		int sleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int sright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		StmtCICS s = (StmtCICS)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = s; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_area_sys",18, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // cics_area_sys ::= cics_stmt_acquire 
            {
              StmtCICS RESULT =null;
		int sleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int sright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		StmtCICS s = (StmtCICS)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = s; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_area_sys",18, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // cics_area_web ::= WSAEPR CREATE 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_area_web",17, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // cics_area_web ::= WSACONTEXT cics_wsacontext 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_area_web",17, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // cics_area_web ::= TRANSFORM cics_transform 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_area_web",17, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // cics_area_web ::= SOAPFAULT cics_soap 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_area_web",17, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // cics_area_web ::= INVOKE cics_invoke 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_area_web",17, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // cics_area_web ::= WEB cics_web 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w2 = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w.add(w2)); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_area_web",17, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // cics_area_web ::= CONVERTTIME 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w);         
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_area_web",17, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // cics_area_program ::= XCTL 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_area_program",16, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // cics_area_program ::= RETURN 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_area_program",16, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // cics_area_program ::= RELEASE 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_area_program",16, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // cics_area_program ::= LOAD 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_area_program",16, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // cics_area_program ::= LINK 
            {
              StmtCICS RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		SDPSymbol w = (SDPSymbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt = new StmtCICS(w); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_area_program",16, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // cics_area_pgm ::= cics_group_terminal 
            {
              StmtCICS RESULT =null;
		int sleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int sright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		StmtCICS s = (StmtCICS)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = s; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_area_pgm",15, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // cics_area_pgm ::= cics_group_ts 
            {
              StmtCICS RESULT =null;
		int sleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int sright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		StmtCICS s = (StmtCICS)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = s; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_area_pgm",15, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // cics_area_pgm ::= cics_group_task 
            {
              StmtCICS RESULT =null;
		int sleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int sright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		StmtCICS s = (StmtCICS)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = s; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_area_pgm",15, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // cics_area_pgm ::= cics_group_storage 
            {
              StmtCICS RESULT =null;
		int sleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int sright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		StmtCICS s = (StmtCICS)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = s; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_area_pgm",15, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // cics_area_pgm ::= cics_group_spool 
            {
              StmtCICS RESULT =null;
		int sleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int sright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		StmtCICS s = (StmtCICS)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = s; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_area_pgm",15, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // cics_area_pgm ::= cics_group_schedul 
            {
              StmtCICS RESULT =null;
		int sleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int sright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		StmtCICS s = (StmtCICS)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = s; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_area_pgm",15, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // cics_area_pgm ::= cics_group_journaling 
            {
              StmtCICS RESULT =null;
		int sleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int sright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		StmtCICS s = (StmtCICS)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = s; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_area_pgm",15, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // cics_area_pgm ::= cics_group_interval 
            {
              StmtCICS RESULT =null;
		int sleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int sright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		StmtCICS s = (StmtCICS)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = s; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_area_pgm",15, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // cics_area_pgm ::= cics_group_file 
            {
              StmtCICS RESULT =null;
		int sleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int sright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		StmtCICS s = (StmtCICS)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = s; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_area_pgm",15, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // cics_area_pgm ::= cics_group_excep 
            {
              StmtCICS RESULT =null;
		int sleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int sright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		StmtCICS s = (StmtCICS)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = s; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_area_pgm",15, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // cics_area_pgm ::= cics_group_diag 
            {
              StmtCICS RESULT =null;
		int sleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int sright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		StmtCICS s = (StmtCICS)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = s; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_area_pgm",15, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // cics_area_pgm ::= cics_group_bts 
            {
              StmtCICS RESULT =null;
		int sleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int sright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		StmtCICS s = (StmtCICS)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = s; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_area_pgm",15, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // cics_area_pgm ::= cics_group_bms 
            {
              StmtCICS RESULT =null;
		int sleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int sright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		StmtCICS s = (StmtCICS)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = s; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_area_pgm",15, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // cics_area_pgm ::= cics_group_auth 
            {
              StmtCICS RESULT =null;
		int sleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int sright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		StmtCICS s = (StmtCICS)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = s; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_area_pgm",15, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // cics_area_pgm ::= cics_group_abend 
            {
              StmtCICS RESULT =null;
		int sleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int sright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		StmtCICS s = (StmtCICS)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = s; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_area_pgm",15, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // cics_stmt ::= cics_stmt_common 
            {
              StmtCICS RESULT =null;
		int sleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int sright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		StmtCICS s = (StmtCICS)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt.setGroup(CDG.STMT_CICS_PGM);   RESULT = s; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt",20, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // cics_stmt ::= cics_area_sys 
            {
              StmtCICS RESULT =null;
		int sleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int sright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		StmtCICS s = (StmtCICS)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt.setGroup(CDG.STMT_CICS_SYS);   RESULT = s; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt",20, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // cics_stmt ::= cics_area_web 
            {
              StmtCICS RESULT =null;
		int sleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int sright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		StmtCICS s = (StmtCICS)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt.setGroup(CDG.STMT_CICS_WEB);   RESULT = s; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt",20, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // cics_stmt ::= cics_area_program 
            {
              StmtCICS RESULT =null;
		int sleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int sright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		StmtCICS s = (StmtCICS)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt.setGroup(CDG.STMT_CICS_CTL);   RESULT = s; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt",20, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // cics_stmt ::= cics_area_pgm 
            {
              StmtCICS RESULT =null;
		int sleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int sright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		StmtCICS s = (StmtCICS)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 stmt.setGroup(CDG.STMT_CICS_PGM);   RESULT = s; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_stmt",20, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // cics_statement ::= cics_stmt cics_options 
            {
              StmtCICS RESULT =null;
		int sleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		StmtCICS s = (StmtCICS)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		int oleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int oright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		Option o = (Option)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 RESULT = s; 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics_statement",19, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // cics ::= 
            {
              Symbol RESULT =null;
		 RESULT = symbolFactory.newSymbol(0, 0, 0, null); 
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics",0, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // $START ::= cics EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).right;
		Symbol start_val = (Symbol)((java_cup.runtime.Symbol) CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)).value;
		RESULT = start_val;
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.elementAt(CUP$CICSParser$top-1)), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$CICSParser$parser.done_parsing();
          return CUP$CICSParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // cics ::= cics_statement 
            {
              Symbol RESULT =null;
		int sleft = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).left;
		int sright = ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()).right;
		StmtCICS s = (StmtCICS)((java_cup.runtime.Symbol) CUP$CICSParser$stack.peek()).value;
		 code.processCICSStatement(stmt);
                              RESULT = symbolFactory.newSymbol(0, 0, 0, stmt);  
                           
              CUP$CICSParser$result = parser.getSymbolFactory().newSymbol("cics",0, ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CICSParser$stack.peek()), RESULT);
            }
          return CUP$CICSParser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

