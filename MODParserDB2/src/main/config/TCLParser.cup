package com.jgg.sdp.parser.lang;

import java_cup.runtime.*;

import com.jgg.sdp.parser.base.*;

import com.jgg.sdp.parser.stmt.StmtSQL;
import com.jgg.sdp.parser.symbols.*;
import com.jgg.sdp.common.ctes.*;

parser code {:
   ParserInfo    info     = ParserInfo.getInstance();
   
   public void syntax_error(SDPSymbol token) throws ParseException {
          info.syntax_error(token);
   }

   public void unrecovered_syntax_error(SDPSymbol token) throws ParseException {
      info.unrecovered_syntax_error(token);
   }
:}

action code {:
   SDPSymbolFactory symbolFactory = new SDPSymbolFactory();
   ParserInfo      info     = ParserInfo.getInstance();
   StmtSQL         stmt     = new StmtSQL(CDG.STMT_SQL, CDG.STMT_PCL);
   
   public void initActionClass() {
   }

   public void print(String txt) { 
      System.out.println(txt); 
   }

:}


init with {:
  action_obj.initActionClass();
:}

/****************************************************************************/
/****************************************************************************/
/*               TERMINALES                                                 */
/****************************************************************************/
/****************************************************************************/

terminal SDPSymbol ALL                                   ;

terminal SDPSymbol COMMIT                                ;
terminal SDPSymbol CURRENT                               ;
terminal SDPSymbol CURSORS                               ;

terminal SDPSymbol DATE                                  ;
terminal SDPSymbol DEC                                   ;

terminal SDPSymbol EXCLUSIVE                             ;

terminal SDPSymbol HOSTVAR1                              ;
terminal SDPSymbol HOSTVAR2                              ;

terminal SDPSymbol ID        ;
terminal SDPSymbol IN                                    ;


terminal SDPSymbol LOCK                                  ;
terminal SDPSymbol LOCKS                                 ;

terminal SDPSymbol MAX                                   ;
terminal SDPSymbol MIN                                   ;
terminal SDPSymbol MODE                                  ;

terminal SDPSymbol NUM_ENTERO                            ;



terminal SDPSymbol ON                                    ;

terminal SDPSymbol PARTITION                             ;

terminal SDPSymbol QUERYNO                               ;

terminal SDPSymbol REFRESH                               ;
terminal SDPSymbol RELEASE                               ;
terminal SDPSymbol RETAIN                                ;
terminal SDPSymbol ROLLBACK                              ;

terminal SDPSymbol SAVEPOINT                             ;
terminal SDPSymbol SHARE                                 ;
terminal SDPSymbol SMALLINT                              ;


terminal SDPSymbol TABLE                                 ;
terminal SDPSymbol TIMESTAMP                             ;
terminal SDPSymbol TIME                                  ;
terminal SDPSymbol TO                                    ;

terminal SDPSymbol VERSION                               ;

terminal SDPSymbol WORK                                  ;



non terminal Symbol  sql_stmt           ;
non terminal StmtSQL sql_tcl            ;
non terminal StmtSQL sql_commit         ;
non terminal StmtSQL sql_rollback       ;
non terminal StmtSQL sql_savepoint      ;
non terminal StmtSQL sql_lock_table     ;
non terminal StmtSQL sql_release        ;
non terminal StmtSQL sql_refresh        ;

non terminal sql_savepoint_opt  ;
non terminal sql_savepoint_lst  ;
non terminal sql_savepoint_item ;

non terminal lock_partition_opt ;
non terminal lock_mode_opt      ;
non terminal lock_mode          ;

non terminal sql_release_type   ;
non terminal release_connection ;
non terminal release_savepoint  ;


non terminal SDPSymbol non_reserved_words ;
non terminal SDPSymbol integer     ;

non terminal opt_clause_queryno ;
non terminal opt_id             ;
non terminal opt_savepoint      ;
non terminal opt_sql            ;
non terminal opt_to             ;
non terminal opt_work           ;

non terminal id                 ;
non terminal opt_unique         ;

non terminal table_name         ;

non terminal host_var_simple    ;
non terminal host_variable      ;


/**********************************************************************/
/**********************************************************************/
/**********************************************************************/
/*                        INICIO PARSER                               */
/* Devuelve el nombre de la copy si es include                        */
/* Si no devuelve la cadena vacia                                     */
/**********************************************************************/
/**********************************************************************/
/**********************************************************************/

sql_stmt ::= sql_tcl:s {: stmt.adjust(info.getLastSymbol()); 
                          RESULT = symbolFactory.newSymbol(0, 0, 0, stmt); 
                       :}
         ;
    
sql_tcl ::= sql_commit
        |   sql_rollback
        |   sql_savepoint 
        |   sql_lock_table
        |   sql_release
        |   sql_refresh
        ; 

/**********************************************************************/
/*                         COMMIT                                     */
/**********************************************************************/

sql_commit ::= COMMIT:v {: stmt.setVerb(v); :}  opt_work
           ;

/**********************************************************************/
/*                         ROLLBACK                                   */
/**********************************************************************/
           
sql_rollback ::= ROLLBACK:v {: stmt.setVerb(v); :}  opt_work opt_savepoint
             ;          

/**********************************************************************/
/*                         SAVEPOINT                                  */
/**********************************************************************/
             
sql_savepoint ::= SAVEPOINT:v {: stmt.setVerb(v); :}  id opt_unique sql_savepoint_opt
              ;

sql_savepoint_opt ::= sql_savepoint_lst
                  |
                  ;
                                
sql_savepoint_lst ::= sql_savepoint_item
                  |   sql_savepoint_lst sql_savepoint_item
                  ;

sql_savepoint_item ::= ON ROLLBACK RETAIN CURSORS
                   |   ON ROLLBACK RETAIN LOCKS
                   ;

/**********************************************************************/
/*                         LOCK                                       */
/**********************************************************************/

sql_lock_table ::= LOCK:l TABLE:t {: stmt.setVerb(l, t); :} table_name lock_partition_opt IN lock_mode_opt MODE                                  
               ;
         
lock_partition_opt ::= PARTITION NUM_ENTERO
                   |
                   ;

lock_mode_opt ::= lock_mode
              |
              ;

lock_mode ::= SHARE
          |   EXCLUSIVE
          ;

/**********************************************************************/
/*                         RELEASE                                    */
/**********************************************************************/

sql_release ::= RELEASE:v {: stmt.setVerb(v); :} sql_release_type
            ;

sql_release_type ::= release_connection
                 |   release_savepoint
                 ;
                                              
release_connection ::= host_var_simple
                   |   CURRENT
                   |   ALL opt_sql
                   ;
                   
release_savepoint ::= opt_to SAVEPOINT id
                  ;
                  
/**********************************************************************/
/*                         REFRESH                                    */
/**********************************************************************/
                  
sql_refresh ::= REFRESH:r TABLE:t {: stmt.setVerb(r,t); :} table_name opt_clause_queryno
            ;
                                                                                                   

/**********************************************************************/
/**********************************************************************/
/**********************************************************************/
/*             COMUNES                                                */
/**********************************************************************/
/**********************************************************************/
/**********************************************************************/

host_var_simple ::= host_variable
                ;

host_variable ::= HOSTVAR1
              |   HOSTVAR2
              ;
              
table_name ::= ID 
           ;
           
id ::= ID
   |   non_reserved_words
   ;

integer ::= NUM_ENTERO
        |   host_variable
        ;

/**********************************************************************/
/**********************************************************************/
/**********************************************************************/
/*             PALABRAS OPCIONALES                                    */
/**********************************************************************/
/**********************************************************************/
/**********************************************************************/

opt_work ::= WORK
         |
         ;        

opt_savepoint ::= TO SAVEPOINT opt_id
              |
              ;
              
opt_id ::= id
       | 
       ;

opt_to ::= TO
       |
       ;

opt_clause_queryno ::= QUERYNO integer
                   |
                   ;
                          
/**********************************************************************/
/**********************************************************************/
/**********************************************************************/
/*            RESTO - SE COME TODO LO QUE HALLA                       */
/*         FUNCIONES Y VERBOS NO ADMITIDOS EN PROGRAMAS               */     
/**********************************************************************/
/**********************************************************************/
/**********************************************************************/

non_reserved_words ::= DEC
                   |   MAX
                   |   MIN
                   |   VERSION
                   |   TIMESTAMP
                   |   DATE
                   |   TIME
                   |   SMALLINT
                   ;               
                   